# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Package CI/CD

on:
  push:
    branches: [ "release" ]
    tags: [ 'v*.*.*' ] # Trigger on version tags like v0.1.0
  pull_request:
    branches: [ "release" ]

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - name: Check out repository
      uses: actions/checkout@v5

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      env:
        PIP_DISABLE_PIP_VERSION_CHECK: 1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python --version
        python -m pip install --upgrade pip
        pip install flake8
        pip install .

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings.
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  publish:
    name: Publish to PyPI
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    steps:
    - name: Check out repository
      uses: actions/checkout@v5
    - name: Set up Python
      uses: actions/setup-python@v6
      env:
        PIP_DISABLE_PIP_VERSION_CHECK: 1
      with:
        python-version: '3.x'

    - name: Install build dependencies
      run: python -m pip install -U --upgrade pip build

    - name: Build package
      run: python -m build

    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
